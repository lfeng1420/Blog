<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[使用VS2015编译Cocos2dx-3.2项目]]></title>
      <url>/blog/2018/Build-cocos2dx-3_2-project-with-VS2015.html</url>
      <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><hr>
<p>&emsp;&emsp;cocos2dx3.2应该算是大家比较熟知的一个版本了，相比后续的版本，这个版本生成的apk比较小，重点是支持WP8（软粉一枚(ง •_•)ง），然而这个版本生成的项目在VS2015上编译不过。接下来介绍如何修改使VS2015能够顺利编译项目。<a id="more"></a></p>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><hr>
<p>&emsp;&emsp;用cocos2dx3.2创建一个项目（以下用<code>YourProject</code>表示项目路径），创建成功后用VS2015打开<code>proj.win32</code>下的sln文件，打开时会弹出一个升级VC编译器和库的提示，点确认即可。之后编译整个解决方案，不出意外的话会看到这些报错：<br><img src="../images/Cocos2dx/builderror.png" alt=""></p>
<h1 id="解决错误"><a href="#解决错误" class="headerlink" title="解决错误"></a>解决错误</h1><hr>
<p>&emsp;&emsp;接下来解决这些编译报错，双击报错信息可以定位到所在文件以及行。</p>
<h2 id="无效文本后缀XSTR"><a href="#无效文本后缀XSTR" class="headerlink" title="无效文本后缀XSTR"></a>无效文本后缀<code>XSTR</code></h2><p>&emsp;&emsp;报错文件为<code>YourProject\cocos2d\external\chipmunk\src\chipmunk.c(48)</code>。查找报错信息发现，VS2015新增了用户定义文本支持，详细见<a href="https://msdn.microsoft.com/zh-cn/library/dn919277.aspx" target="_blank" rel="noopener"><strong>MSDN:用户定义的文本</strong></a>，这里<code>XSTR(CP_VERSION_MAJOR)&quot;.&quot;XSTR(CP_VERSION_MINOR)&quot;.&quot;XSTR(CP_VERSION_RELEASE)</code>后面两个XSTR由于没有空格隔开，所以被认为是用户定义的文本，但实际上没有XSTR这个定义，所以报错。解决办法就是在分别在后面两个<code>XSTR</code>前面加上空格，即：<code>XSTR(CP_VERSION_MAJOR)&quot;.&quot; XSTR(CP_VERSION_MINOR)&quot;.&quot; XSTR(CP_VERSION_RELEASE)</code>。</p>
<h2 id="snprintf宏定义冲突"><a href="#snprintf宏定义冲突" class="headerlink" title="snprintf宏定义冲突"></a><code>snprintf</code>宏定义冲突</h2><p>&emsp;&emsp;Macro definition of snprintf conflicts with Standard Library function declaration这条报错信息的意思是<code>snprintf</code>宏定义和标准库定义冲突，说明cocos2dx在内部定义了<code>snprintf</code>宏。查看输出可以发现在这条报错信息前面还有一条警告信息，如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1&gt;C:\Program Files (x86)\Windows Kits\10\Include\10.0.10240.0\ucrt\stdio.h(1925): warning C4005: \<span class="string">'snprintf\'</span>: macro redefinition (compiling <span class="built_in">source</span> file ..\base\atitc.cpp)</span><br><span class="line">1&gt;  YourProject\cocos2d\cocos\platform\win32\CCStdC.h(53): note: see previous definition of \<span class="string">'snprintf\'</span> (compiling <span class="built_in">source</span> file ..\base\atitc.cpp)</span><br></pre></td></tr></table></figure></p>
<p>&emsp;&emsp;定位到CCStdC.h文件53行，可以看到snprintf宏的定义，解决办法就是把<code>#define snprintf _snprintf</code>注释掉。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// for math.h on win32 platform</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __MINGW32__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> !defined(_USE_MATH_DEFINES)</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> _USE_MATH_DEFINES       <span class="comment">// make M_PI can be use</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> !defined(isnan)</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> isnan   _isnan</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> snprintf</span></span><br><span class="line"><span class="comment">//#define snprintf _snprintf    // 注释掉这一行即可</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// __MINGW32__</span></span></span><br></pre></td></tr></table></figure></p>
<h2 id="无法解析的外部符号"><a href="#无法解析的外部符号" class="headerlink" title="无法解析的外部符号"></a>无法解析的外部符号</h2><p>&emsp;&emsp;编译错误解决了之后，重新编译发现有链接错误：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3&gt;libpng.lib(pngerror.obj) : error LNK2019: unresolved external symbol __imp____iob_func referenced <span class="keyword">in</span> <span class="keyword">function</span> _png_default_error</span><br><span class="line">3&gt;libtiff.lib(tif_unix.obj) : error LNK2001: unresolved external symbol __imp____iob_func</span><br><span class="line">3&gt;libjpeg.lib(jerror.obj) : error LNK2019: unresolved external symbol ___iob_func referenced <span class="keyword">in</span> <span class="keyword">function</span> _output_message</span><br><span class="line">3&gt;MSVCRTD.lib(vsnprintf.obj) : error LNK2001: unresolved external symbol __imp___vsnprintf</span><br></pre></td></tr></table></figure></p>
<h3 id="iob-func"><a href="#iob-func" class="headerlink" title="__iob_func"></a><code>__iob_func</code></h3><p>&emsp;&emsp;出现<code>__iob_func</code>链接错误的原因是早期VS版本是用<code>__iob_func</code>来定义<code>stdin</code>、<code>stdout</code>和<code>stderr</code>宏的，而VS2015是用<code>__acrt_iob_func</code>定义（以SDK 10240版本为例，三个宏定义在<code>c:\Program Files (x86)\Windows Kits\10\Include\10.0.10240.0\ucrt\corecrt_wstdio.h</code>）。有以下两种解决办法：</p>
<ol>
<li>自行编译libpng、libtiff和libjpeg生成VS2015版本的lib文件；</li>
<li>从cocos2dx最新版本中拷贝libpng、libtiff和libjpeg的win32版本lib文件及头文件到cocos2dx3.2对应目录<code>YourProject\cocos2d\external</code>（<strong>不希望下载cocos2dx最新版本？查看结束部分下载我提供的附件</strong>）；<br>拷贝完成之后修改<code>YourProject\cocos2d\cocos\platform\win32\CCPlatformDefine.h</code>，在<code>#endif // CC_TARGET_PLATFORM == CC_PLATFORM_WIN32</code>之前加上如下代码：  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">if</span> _MSC_VER &gt;= 1900</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">"libpng-2015.lib"</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">"libjpeg-2015.lib"</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">"libtiff-2015.lib"</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">"libpng.lib"</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">"libjpeg.lib"</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">"libtiff.lib"</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="vsnprintf"><a href="#vsnprintf" class="headerlink" title="__vsnprintf"></a><code>__vsnprintf</code></h3><p></p><p>&emsp;&emsp;出现这个问题的原因参考<a href="https://social.msdn.microsoft.com/Forums/en-US/5150eeec-4427-440f-ab19-aecb26113d31/updated-to-vs-2015-and-now-get-unresolved-external-errors?forum=vcgeneral" target="_blank" rel="noopener"><strong>MSDN Social：Updated to VS 2015 and now get Unresolved External Errors</strong></a>，解决办法是在启动项目属性中的链接器-&gt;输入-&gt;附加依赖项中加上<code>legacy_stdio_definitions.lib</code>。</p><br><img src="../images/Cocos2dx/add_stdio_definitions_lib.png" alt=""><p></p>
<h1 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h1><hr>
<p>&emsp;&emsp;到这里所有问题都已经解决，可以用VS2015愉快的写代码了😘<br>&emsp;&emsp;最后附上cocos2dx3.14.1版本的libpng、libtiff和libjpeg库相关文件，包含三个库的win32版本include和prebuilt目录，下载地址<a href="../attachments/cocos2d.zip"><strong>点这里</strong></a>，下载之后直接替换你的项目下的cocos2d目录即可。</p>
]]></content>
      
        <categories>
            
            <category> Cocos2dx </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Cocos2dx </tag>
            
            <tag> VS2015 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Trigger第三篇：创建、读取和写入json文件]]></title>
      <url>/blog/2015/TS3-create-read-write-data-with-json.html</url>
      <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><hr>
<p>&#160; &#160; &#160; &#160;上一篇其实已经说完了这个游戏里的重要部分了，所以接下来开始写代码了。先从解析json文件开始，配置环境啥的就不写了，网上一搜大把的教程（感觉这部分其实都不用写，也有类似读取json文件的教程= =）<a id="more"></a></p>
<h1 id="地图数据json"><a href="#地图数据json" class="headerlink" title="地图数据json"></a>地图数据json</h1><hr>
<p>&#160; &#160; &#160; &#160;这里使用rapidjson读取json文件。以3.2版本为例，rapidjson头文件在项目目录\cocos2d\external\json下，如下图所示：<br><img src="../images/Trigger/rapidjson.png" alt="rapidjson"><br>&#160; &#160; &#160; &#160;在使用rapidjson前，需要引入以下头文件：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"json/rapidjson.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"json/writer.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"json/document.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"json/prettywriter.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"json/stringbuffer.h"</span></span></span><br></pre></td></tr></table></figure></p>
<p>&#160; &#160; &#160; &#160;接下来上地图配置加载的代码：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加载json并解析</span></span><br><span class="line"><span class="keyword">bool</span> CDataManager::LoadMapData()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">string</span> strContent = FileUtils::getInstance()-&gt;getStringFromFile(MAP_FILE_PATH);</span><br><span class="line"></span><br><span class="line">	rapidjson::Document oDoc;</span><br><span class="line">	oDoc.Parse&lt;<span class="number">0</span>&gt;(strContent.c_str());</span><br><span class="line">	<span class="keyword">if</span> (oDoc.HasParseError())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">log</span>(<span class="string">"Parse Error: %s\n"</span>, oDoc.GetParseError());</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (oDoc.IsNull() || !oDoc.IsArray())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; oDoc.Size(); i++)</span><br><span class="line">	&#123;</span><br><span class="line">		MapInfo mapInfo;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//color</span></span><br><span class="line">		<span class="keyword">if</span> (oDoc[i][<span class="string">"color"</span>].IsNull())</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		mapInfo.iColor = oDoc[i][<span class="string">"color"</span>].GetInt();</span><br><span class="line"></span><br><span class="line">		<span class="comment">//id</span></span><br><span class="line">		<span class="keyword">if</span> (oDoc[i][<span class="string">"id"</span>].IsNull())</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		mapInfo.iID = oDoc[i][<span class="string">"id"</span>].GetInt();</span><br><span class="line"></span><br><span class="line">		<span class="comment">//beat</span></span><br><span class="line">		<span class="keyword">if</span> (oDoc[i][<span class="string">"beat"</span>].IsNull())</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		mapInfo.iBeat = oDoc[i][<span class="string">"beat"</span>].GetInt();</span><br><span class="line"></span><br><span class="line">		<span class="comment">//map</span></span><br><span class="line">		<span class="keyword">if</span> (oDoc[i][<span class="string">"map"</span>].IsNull() || (!oDoc[i][<span class="string">"map"</span>].IsArray()))</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//每行数据</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; oDoc[i][<span class="string">"map"</span>].Size(); j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (oDoc[i][<span class="string">"map"</span>][j].IsNull() </span><br><span class="line">				|| (!oDoc[i][<span class="string">"map"</span>][j].IsArray()))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; oDoc[i][<span class="string">"map"</span>][j].Size(); k++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (oDoc[i][<span class="string">"map"</span>][j][k].IsNull())</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">				<span class="keyword">int</span> iValue = oDoc[i][<span class="string">"map"</span>][j][k].GetInt();</span><br><span class="line">				<span class="comment">//每行数据存入vecMap中</span></span><br><span class="line">				mapInfo.vecMap.push_back(iValue);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//mapitem</span></span><br><span class="line">		<span class="keyword">if</span> (oDoc[i][<span class="string">"mapitem"</span>].IsNull() </span><br><span class="line">			|| (!oDoc[i][<span class="string">"mapitem"</span>].IsArray()))</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; oDoc[i][<span class="string">"mapitem"</span>].Size(); j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (oDoc[i][<span class="string">"mapitem"</span>][j].IsNull())</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="built_in">string</span> strMapItem = oDoc[i][<span class="string">"mapitem"</span>][j].GetString();</span><br><span class="line"></span><br><span class="line">			<span class="keyword">int</span> iArrow[<span class="number">3</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">			SplitString(strMapItem, <span class="string">'_'</span>, iArrow);</span><br><span class="line"></span><br><span class="line">			ArrowInfo arrowInfo;</span><br><span class="line">			<span class="comment">//X和Y位置互换</span></span><br><span class="line">			arrowInfo.iY = iArrow[<span class="number">0</span>];</span><br><span class="line">			arrowInfo.iX = iArrow[<span class="number">1</span>];</span><br><span class="line">			arrowInfo.iType = iArrow[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">			<span class="comment">//存入vecMapItem中</span></span><br><span class="line">			mapInfo.vecMapItem.push_back(arrowInfo);</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//useritem</span></span><br><span class="line">		<span class="keyword">if</span> (oDoc[i][<span class="string">"useritem"</span>].IsNull() </span><br><span class="line">			|| (!oDoc[i][<span class="string">"useritem"</span>].IsArray()))</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; oDoc[i][<span class="string">"useritem"</span>].Size(); j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (oDoc[i][<span class="string">"useritem"</span>][j].IsNull())</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">int</span> iNum = oDoc[i][<span class="string">"useritem"</span>][j].GetInt();</span><br><span class="line"></span><br><span class="line">			mapInfo.vecUserItem.push_back(iNum);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		m_oMapVec.push_back(mapInfo);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>&#160; &#160; &#160; &#160;以上代码涉及到了两个结构体，MapInfo和ArrowInfo，对应定义如下：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//箭头信息</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ArrowInfo</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">int</span> iX;		<span class="comment">//横向位置索引</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> iY;		<span class="comment">//纵向位置索引</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> iType;	<span class="comment">//箭头类型</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">MapInfo</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">int</span> iColor;	<span class="comment">//颜色序号，也是主题序号</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> iID;	<span class="comment">//关卡ID</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> iBeat;	<span class="comment">//可点击次数</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vecMap;	<span class="comment">//六边形行列分布序列</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">vector</span>&lt;ArrowInfo&gt; vecMapItem;	<span class="comment">//地图中箭头分布</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vecUserItem;	<span class="comment">//可用箭头数据</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>&#160; &#160; &#160; &#160;另外还有一个函数SplitString，其负责解析出字符串中的三个数值，代码如下：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//移除string中所有位置出现过的某个字符</span></span><br><span class="line"><span class="keyword">void</span> CDataManager::SplitString(<span class="built_in">string</span> &amp;srcStr, <span class="keyword">char</span> chTarget, <span class="keyword">int</span>* pArray)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">int</span> iPos = srcStr.find_first_of(<span class="string">'_'</span>);</span><br><span class="line">	<span class="built_in">string</span> strTemp = srcStr.substr(<span class="number">0</span>, iPos);</span><br><span class="line">	pArray[<span class="number">0</span>] = atoi(strTemp.c_str());</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> iNewPos = srcStr.find_first_of(<span class="string">'_'</span>, iPos + <span class="number">1</span>);</span><br><span class="line">	strTemp = srcStr.substr(iPos + <span class="number">1</span>, iNewPos - iPos - <span class="number">1</span>);</span><br><span class="line">	pArray[<span class="number">1</span>] = atoi(strTemp.c_str());</span><br><span class="line"></span><br><span class="line">	iPos = srcStr.find_first_of(<span class="string">'_'</span>, iNewPos + <span class="number">1</span>);</span><br><span class="line">	strTemp = srcStr.substr(iNewPos + <span class="number">1</span>, iPos - iNewPos - <span class="number">1</span>);</span><br><span class="line">	pArray[<span class="number">2</span>] = atoi(strTemp.c_str());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="进度数据json"><a href="#进度数据json" class="headerlink" title="进度数据json"></a>进度数据json</h1><hr>
<p>&#160; &#160; &#160; &#160;现在需要考虑一个问题，游戏的进度该如何保存？使用UserDefault类？很显然是不行的，因为需要记录每个关卡的分数情况，200个关卡用UserDefault去存储的话显然够呛，所以这里可以考虑使用json文件保存游戏进度数据（当然，用xml也是可以的）。进度数据文件格式如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"score"</span>:600,<span class="string">"level"</span>:200,<span class="string">"data"</span>:[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]&#125;</span><br></pre></td></tr></table></figure></p>
<p>&#160; &#160; &#160; &#160;先写个创建进度数据文件的函数。因为第一次打开游戏时，进度是木有的，所以需要先建好进度数据文件：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> CDataManager::InitUserData(<span class="keyword">const</span> <span class="keyword">char</span>* pName)</span><br><span class="line">&#123;</span><br><span class="line">	rapidjson::Document oWriteDoc;</span><br><span class="line">	oWriteDoc.SetObject();</span><br><span class="line">	rapidjson::Document::AllocatorType&amp; allocator = oWriteDoc.GetAllocator();</span><br><span class="line">	rapidjson::<span class="function">Value <span class="title">oArray</span><span class="params">(rapidjson::kArrayType)</span></span>;</span><br><span class="line"></span><br><span class="line">	oWriteDoc.AddMember(<span class="string">"score"</span>, <span class="number">0</span>, allocator);</span><br><span class="line">	oWriteDoc.AddMember(<span class="string">"level"</span>, <span class="number">0</span>, allocator);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//初始化数据</span></span><br><span class="line">	m_stUserInfo.iLevel = <span class="number">0</span>;</span><br><span class="line">	m_stUserInfo.iScore = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; TOTAL_LEVEL_NUM; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		m_stUserInfo.vecData.push_back(<span class="number">0</span>);</span><br><span class="line">		oArray.PushBack(<span class="number">0</span>, allocator);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	oWriteDoc.AddMember(<span class="string">"data"</span>, oArray, allocator);</span><br><span class="line"></span><br><span class="line">	rapidjson::StringBuffer oBuffer;</span><br><span class="line">	rapidjson::Writer&lt;rapidjson::StringBuffer&gt; oWriter(oBuffer);</span><br><span class="line">	oWriteDoc.Accept(oWriter);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//写入</span></span><br><span class="line">	FILE* pFile = fopen(pName, <span class="string">"wb+"</span>);</span><br><span class="line">	<span class="keyword">if</span> (pFile == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">log</span>(<span class="string">"Open File '%s' Failed."</span>, pName);</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">fputs</span>(oBuffer.GetString(), pFile);</span><br><span class="line">	fclose(pFile);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>&#160; &#160; &#160; &#160;这里传入参数pName即要写入的进度数据文件路径，由于创建时没有进度，所以score和level都是0，各个关卡分数记录也是0。<br>&#160; &#160; &#160; &#160;接下来写加载进度数据文件的函数：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加载用户数据</span></span><br><span class="line"><span class="keyword">bool</span> CDataManager::LoadUserData()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">string</span> strPath = FileUtils::getInstance()-&gt;getWritablePath() + <span class="built_in">string</span>(SAVE_DATA_PATH);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _DEBUG_</span></span><br><span class="line">	<span class="built_in">log</span>(<span class="string">"UserData Path:%s\n"</span>, strPath.c_str());</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">string</span> strContent = FileUtils::getInstance()-&gt;getStringFromFile(strPath);</span><br><span class="line">	rapidjson::Document oDoc;</span><br><span class="line">	oDoc.Parse&lt;<span class="number">0</span>&gt;(strContent.c_str());</span><br><span class="line">	<span class="keyword">if</span> (oDoc.HasParseError() || oDoc.IsNull())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//log("CDataManager::LoadUserData Load 'oDoc' Error.");</span></span><br><span class="line">		InitUserData(strPath.c_str());</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//当前获得的分数</span></span><br><span class="line">	<span class="keyword">if</span> (oDoc[<span class="string">"score"</span>].IsNull())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">log</span>(<span class="string">"CDataManager::LoadUserData Load 'score' Error."</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	m_stUserInfo.iScore = oDoc[<span class="string">"score"</span>].GetInt();</span><br><span class="line"></span><br><span class="line">	<span class="comment">//已通过关卡数量，因为不可能跨关卡，所以也表示当前通过的最后一关</span></span><br><span class="line">	<span class="keyword">if</span> (oDoc[<span class="string">"level"</span>].IsNull())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">log</span>(<span class="string">"CDataManager::LoadUserData Load 'level' Error."</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	m_stUserInfo.iLevel = oDoc[<span class="string">"level"</span>].GetInt();</span><br><span class="line"></span><br><span class="line">	<span class="comment">//所有关卡当前信息</span></span><br><span class="line">	<span class="keyword">if</span> (oDoc[<span class="string">"data"</span>].IsNull() || (!oDoc[<span class="string">"data"</span>].IsArray()))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">log</span>(<span class="string">"CDataManager::LoadUserData Load 'data' Error."</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; oDoc[<span class="string">"data"</span>].Size(); i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (oDoc[<span class="string">"data"</span>][i].IsNull())</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">log</span>(<span class="string">"CDataManager::LoadUserData Load 'oDoc[data][%d]' Error."</span>, i);</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">int</span> iValue = oDoc[<span class="string">"data"</span>][i].GetInt();</span><br><span class="line">		m_stUserInfo.vecData.push_back(iValue);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>&#160; &#160; &#160; &#160;需要注意的是，默认当进度数据json文件读取失败时，说明json文件不存在，需要重新建立，即调用InitUserData函数创建进度数据文件。m_stUserInfo中保存了读取的进度数据，其类型是UserInfo结构体类型，UserInfo定义如下：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">int</span> iScore;		<span class="comment">//分数</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> iLevel;		<span class="comment">//当前通过关卡数</span></span><br><span class="line"></span><br><span class="line">	<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vecData;	<span class="comment">//关卡得分数据</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>&#160; &#160; &#160; &#160;有了读取函数当然少不了写入函数，进度数据保存函数如下：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用户数据写入到指定文件中</span></span><br><span class="line"><span class="keyword">bool</span> CDataManager::SaveUserData()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">string</span> strPath = FileUtils::getInstance()-&gt;getWritablePath() + <span class="built_in">string</span>(SAVE_DATA_PATH);</span><br><span class="line">	<span class="built_in">string</span> strContent = FileUtils::getInstance()-&gt;getStringFromFile(strPath);</span><br><span class="line">	rapidjson::Document oDoc;</span><br><span class="line">	oDoc.Parse&lt;<span class="number">0</span>&gt;(strContent.c_str());</span><br><span class="line">	<span class="keyword">if</span> (oDoc.HasParseError())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">log</span>(<span class="string">"Parse Error: %s\n"</span>, oDoc.GetParseError());</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (oDoc.IsNull())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//更新分数</span></span><br><span class="line">	<span class="keyword">if</span> (oDoc[<span class="string">"score"</span>].IsNull())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	oDoc[<span class="string">"score"</span>].SetInt(m_stUserInfo.iScore);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//更新通过的关卡数量</span></span><br><span class="line">	<span class="keyword">if</span> (oDoc[<span class="string">"level"</span>].IsNull())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	oDoc[<span class="string">"level"</span>].SetInt(m_stUserInfo.iLevel);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//更新关卡当前信息</span></span><br><span class="line">	<span class="keyword">if</span> (oDoc[<span class="string">"data"</span>].IsNull() || !oDoc[<span class="string">"data"</span>].IsArray())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> iVecSize = m_stUserInfo.vecData.size();</span><br><span class="line">	<span class="keyword">int</span> iJsonSize = oDoc[<span class="string">"data"</span>].Size();</span><br><span class="line">	<span class="keyword">if</span> (iVecSize != iJsonSize)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">log</span>(<span class="string">"Error: %d(iVecSize) != %d(iJsonSize)\n"</span>, iVecSize, iJsonSize);</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (rapidjson::SizeType i = <span class="number">0</span>; i &lt; oDoc[<span class="string">"data"</span>].Capacity(); i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (oDoc[<span class="string">"data"</span>][i].IsNull())</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		oDoc[<span class="string">"data"</span>][i].SetInt(m_stUserInfo.vecData[i]);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//准备写入数据</span></span><br><span class="line">	rapidjson::StringBuffer oBuffer;</span><br><span class="line">	rapidjson::Writer&lt;rapidjson::StringBuffer&gt; oWriter(oBuffer);</span><br><span class="line">	oDoc.Accept(oWriter);</span><br><span class="line"></span><br><span class="line">	FILE* pFile = fopen(strPath.c_str(), <span class="string">"wb+"</span>);</span><br><span class="line">	<span class="keyword">if</span> (pFile == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">log</span>(<span class="string">"Error: Open File '%s' Failed.\n"</span>, strPath.c_str());</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">fputs</span>(oBuffer.GetString(), pFile);</span><br><span class="line">	fclose(pFile);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _DEBUG_</span></span><br><span class="line">	<span class="built_in">log</span>(<span class="string">"UserDataPath:%s"</span>, strPath.c_str());</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>&#160; &#160; &#160; &#160;好了，json文件创建、读取和写入部分先说到这，如果有什么不明白的地方可以联系我。</p>
]]></content>
      
        <categories>
            
            <category> Trigger </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Trigger </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Trigger第二篇：关卡布局]]></title>
      <url>/blog/2015/TS2-map-layout.html</url>
      <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><hr>
<p>&#160; &#160; &#160; &#160;原本打算写如何把json转换为plist文件，但是后来发现有些问题，所以暂时先不写了，等以后有时间补上。这一篇写写最主要的部分：关卡的布局。<a id="more"></a></p>
<h1 id="关卡地图"><a href="#关卡地图" class="headerlink" title="关卡地图"></a>关卡地图</h1><hr>
<p>&#160; &#160; &#160; &#160;第一篇里简单的说明了下地图文件levelmap.json里的数据，每一关都有一个多个六边形的组成的地图（暂且称之为地图吧），奇数行包含7个数字，偶数行包含6个数字，之所以这么安排是为了使整个地图可以居中对齐。<br>&#160; &#160; &#160; &#160;以第一个主题（即大关卡，暂且称之为主题）第1个关卡地图为例，其地图数据如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"color"</span>:0,  <span class="string">"id"</span>:1</span><br><span class="line">...</span><br><span class="line">[0,1,1,1,0,0,0],</span><br><span class="line">[1,2,2,1,0,0],</span><br><span class="line">[1,2,2,2,1,0,0],</span><br><span class="line">[1,2,2,1,0,0],</span><br><span class="line">[0,1,1,1,0,0,0],</span><br><span class="line">[0,0,0,0,0,0],</span><br><span class="line">[0,0,0,0,0,0,0],</span><br><span class="line">[0,0,0,0,0,0],</span><br><span class="line">[0,0,0,0,0,0,0]</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>&#160; &#160; &#160; &#160;其中0表示该位置无六边形，1表示白色六边形，2表示主题色六边形，主题色序号即关卡属性中的color字段。先试着把整个地图画出来（忽略每行两个六边形之间的间距）：<br><img src="../images/Trigger/map1.png" alt="初步的地图"><br>&#160; &#160; &#160; &#160;发现问题了没，嗯，没有六边形的位置实际上也是需要空出来的，再试着重新画一次：<br><img src="../images/Trigger/map2.png" alt="保留了空白位置"><br>&#160; &#160; &#160; &#160;这回好像和目标地图有那么点像了，但是还是不太对，试着把每行居中调整一下：<br><img src="../images/Trigger/map3.png" alt="每行居中"><br>&#160; &#160; &#160; &#160;这回和目标地图有八分相似了，然而还是有些问题，两行之间的间距太大，需要再稍微调整一下。嗯，这些是细节问题，可以后续在写代码时去控制。说到这，地图细节这一块就差不多了，好像很简单吧，然而我在写的时候调试了好久，才总算弄出来了= =</p>
<h1 id="数字和箭头"><a href="#数字和箭头" class="headerlink" title="数字和箭头"></a>数字和箭头</h1><hr>
<h2 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h2><hr>
<p>&#160; &#160; &#160; &#160;从第四个主题第1关开始，之后的部分关卡就有了数字，分为以下两种情况：<br>&#160; &#160; &#160; &#160;1、单个位置数值&lt;10：该六边形颜色为主题色，数字为白色，数字值为该位置数值-2。例如：某个位置数值为5，那么这个位置是一个主题色的六边形，包含了一个白色的数字3。<br>&#160; &#160; &#160; &#160;2、单个位置数值&gt;20：该六边形颜色为白色，数字为主题色，数字值为该位置数值最后一位-1。例如：某个位置数值为22，那么这个位置是一个白色的六边形，包含了一个主题色的数字1。<br>&#160; &#160; &#160; &#160;以第四个主题第6关为例，该地图包含6个有数字的六边形，六边形都是白色，数字都是主题色。其地图数据如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"color"</span>:3,  <span class="string">"id"</span>:6</span><br><span class="line">...</span><br><span class="line">[0,22,1,22,0,0,0],</span><br><span class="line">[2,1,1,2,0,0],</span><br><span class="line">[22,1,2,1,22,0,0],</span><br><span class="line">[1,1,1,1,0,0],</span><br><span class="line">[0,22,2,22,0,0,0],</span><br><span class="line">[0,0,0,0,0,0],</span><br><span class="line">[0,0,0,0,0,0,0],</span><br><span class="line">[0,0,0,0,0,0],</span><br><span class="line">[0,0,0,0,0,0,0]</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>&#160; &#160; &#160; &#160;第四个主题第6关关卡截图：<br><img src="../images/Trigger/map4-6.png" alt="第四个主题第6关地图"></p>
<h2 id="箭头"><a href="#箭头" class="headerlink" title="箭头"></a>箭头</h2><hr>
<p>&#160; &#160; &#160; &#160;从第三个主题第5关开始，之后的部分关卡就有了箭头，箭头对应的是mapitem数组中的配置，每个箭头数据配置如下形式：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"y_x_arrow"</span></span><br></pre></td></tr></table></figure></p>
<p>&#160; &#160; &#160; &#160;是的，没有看错，这里x和y的位置索引是反过来的。后面的arrow数值表示箭头的序号，第一篇中已经说明了。以第三个主题第5关为例，关卡包含的箭头配置如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"color"</span>:2,  <span class="string">"id"</span>:5</span><br><span class="line">...</span><br><span class="line"><span class="string">"mapitem"</span>:[<span class="string">"0_1_3"</span>,<span class="string">"3_1_2"</span>,<span class="string">"2_2_4"</span>,<span class="string">"2_4_1"</span>]</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>&#160; &#160; &#160; &#160;来看看第三个主题第5关的关卡截图：<br><img src="../images/Trigger/map3-5.png" alt="第三个主题第5关地图"><br>&#160; &#160; &#160; &#160;第三个主题第5关的地图数据：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"color"</span>:2,  <span class="string">"id"</span>:5</span><br><span class="line">...</span><br><span class="line">[0,2,1,2,0,0,0],</span><br><span class="line">[2,1,1,2,0,0],</span><br><span class="line">[2,1,2,1,2,0,0],</span><br><span class="line">[1,1,1,1,0,0],</span><br><span class="line">[0,2,2,2,0,0,0],</span><br><span class="line">[0,0,0,0,0,0],</span><br><span class="line">[0,0,0,0,0,0,0],</span><br><span class="line">[0,0,0,0,0,0],</span><br><span class="line">[0,0,0,0,0,0,0]</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>&#160; &#160; &#160; &#160;和第一个主题第1关地图类似，只是有些位置颜色发生了变化。先来看看左边的箭头，左边的箭头对应的是mapitem里的第一个字符串，也就是”0_1_3”：1也就是第1行（从0开始），0也就是第0列，也就是说箭头是在第2行第一个数字对应的六边形位置，它的颜色正好是主题色……后面的我想应该都可以看出来了。</p>
<h2 id="可用箭头"><a href="#可用箭头" class="headerlink" title="可用箭头"></a>可用箭头</h2><hr>
<p>&#160; &#160; &#160; &#160;从第三个主题第9关开始，之后的部分关卡就有了可用箭头，可用箭头在下方5个六边形中，配置对应关卡配置中的useritem数组。以第三个主题第10关为例，该关卡中有3个可用箭头：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"color"</span>:2,  <span class="string">"id"</span>:10</span><br><span class="line">...</span><br><span class="line"><span class="string">"useritem"</span>:[3,2,4]</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>&#160; &#160; &#160; &#160;数字3、2、4表示箭头序号，分别对应<img src="../images/Trigger/arrow3.png" alt="">、<img src="../images/Trigger/arrow2.png" alt="">和<img src="../images/Trigger/arrow4.png" alt="">三个箭头。再来看看关卡截图：<br><img src="../images/Trigger/map3-10.png" alt="第三个主题第10关"></p>
<h1 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h1><hr>
<p>&#160; &#160; &#160; &#160;关卡布局这一块先说到这，下一篇说说在cocos2d-x中读取json文件的那些事。</p>
]]></content>
      
        <categories>
            
            <category> Trigger </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Trigger </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Trigger第一篇：简介以及资源分析]]></title>
      <url>/blog/2015/TS1-resources-analyze.html</url>
      <content type="html"><![CDATA[<h1 id="开篇之前"><a href="#开篇之前" class="headerlink" title="开篇之前"></a>开篇之前</h1><hr>
<p>&#160; &#160; &#160; &#160;想想学Cocos2d-x还是在大四上学期开始的，从那时到现在，一直想做一个自己的游戏，可能是因为自己创意不够吧，一直没这个机会，另外，和自己的水平也有很大关系。这次做的Trigger，依然是仿照写的（也就是资源是拿来的，仅仅是代码是我写的= =）。不过还好，感觉这次做的也还行，大部分功能都做好了，除了一些帮助没做（估计也没多少人会玩，所以帮助就不打算做了）。另外，也是第一次发布了WP版，捣鼓了两天弄出来了，期间也遇到了各种问题……扯得有点远了。<a id="more"></a></p>
<h1 id="Trigger介绍"><a href="#Trigger介绍" class="headerlink" title="Trigger介绍"></a>Trigger介绍</h1><hr>
<p>&#160; &#160; &#160; &#160;一开始玩这游戏的时候感觉还不错，越到后面越难，难的都不想玩了（虐心的游戏(╯‵□′)╯︵┻━┻），先来段原版的介绍（app链接：<a href="http://www.coolapk.com/game/com.orszdxet.java.TriggerApp/" target="_blank" rel="noopener">http://www.coolapk.com/game/com.orszdxet.java.TriggerApp/</a>）：<br>&#160; &#160; &#160; &#160;橘红色与白色的六边形相互比邻，当你点击其中一块时，它会连同相邻的图形一起变换颜色。而你的目标就是要在有限的点击次数内，使所有的图形都变为白色。<br>&#160; &#160; &#160; &#160;每个关卡都会有提示最低完成步数，当你耗尽之后还会有额外的10次动作机会。以限定的步数完成就会获得三星的评价，利用额外的机会则会相应降低评价，追求满星的玩家就要多动动脑了。<br>&#160; &#160; &#160; &#160;游戏内有十大关卡，每个大关又有二十小关，难度会不断增加，喜欢挑战的玩家绝对不能错过！<br>&#160; &#160; &#160; &#160;★游戏特色★<br>&#160; &#160; &#160; &#160;★★★★★简单有趣的玩法<br>&#160; &#160; &#160; &#160;★★★★★大方美观的图形<br>&#160; &#160; &#160; &#160;★★★★★不断升级的挑战<br>&#160; &#160; &#160; &#160;★★★★★锻炼你的判断力<br>&#160; &#160; &#160; &#160;来几张游戏的截图：<br><img src="../images/Trigger/menu.png" width="360" height="240" alt="菜单界面" align="center"><br><img src="../images/Trigger/select.png" width="360" height="240" alt="选关界面" align="center"><br><img src="../images/Trigger/game.png" width="360" height="240" alt="游戏界面" align="center"></p>
<p>&#160; &#160; &#160; &#160;嗯，介绍就先到这了，如果要了解更多内容，下载个玩玩就是了→_→</p>
<h1 id="资源提取"><a href="#资源提取" class="headerlink" title="资源提取"></a>资源提取</h1><hr>
<p>&#160; &#160; &#160; &#160;下载个原版apk然后WinRAR打开，找到resources文件夹（\assets\egret-game\resource），先把它解压出来。<br><img src="../images/Trigger/unpack.png" alt="解压出来的resource文件夹"><br>&#160; &#160; &#160; &#160;再看看apk里的其他文件夹，可以发现，这里面好多广告和其他游戏宣传内容，那些没有后缀的文件重命名为png后缀就可看出来了。（不植入广告肿么赚钱？(╯‵□′)╯︵┻━┻）<br>&#160; &#160; &#160; &#160;另外搜索了下egret-game，这个是一款HTML5的游戏引擎，Egret是白鹭的意思，据说Egret游戏引擎可一次开发分别部署在android、IOS和WP原生平台或者HTML版本。《围住神经猫》就是这个引擎做出来的，感兴趣的可以去看看。</p>
<h1 id="资源分析"><a href="#资源分析" class="headerlink" title="资源分析"></a>资源分析</h1><hr>
<h2 id="资源描述文件resource-json"><a href="#资源描述文件resource-json" class="headerlink" title="资源描述文件resource.json"></a>资源描述文件resource.json</h2><p>&#160; &#160; &#160; &#160;先来看看最外面的文件resource.json（theme.thm这个是空的所以略过）。resource.json文件主要是所有资源的描述以及分组信息，例如：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	<span class="attr">"name"</span>:<span class="string">"block_json_json"</span>,</span><br><span class="line">	<span class="attr">"subkeys"</span>:<span class="string">"block_0,block_1,block_2,block_3,block_4,block_5,block_6,block_7,block_8,block_9,block_w"</span>,</span><br><span class="line">	<span class="attr">"type"</span>:<span class="string">"sheet"</span>,</span><br><span class="line">	<span class="attr">"url"</span>:<span class="string">"assets/block_json.json"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>&#160; &#160; &#160; &#160;这一段json代码意思就是block_json_json这一组里包含block_0.png到block_w.png共10个文件，这里省去了后缀。url即这一些资源对应的打包数据文件，即assets/block_json.json里包含了这十张图片的打包数据，例如：位置、宽高等。</p>
<h2 id="打包资源数据文件"><a href="#打包资源数据文件" class="headerlink" title="打包资源数据文件"></a>打包资源数据文件</h2><p>&#160; &#160; &#160; &#160;接下来看看assets里都有啥：<br><img src="../images/Trigger/assets.png" alt="assets目录"><br>&#160; &#160; &#160; &#160;可以看出assets里存放了游戏中所有的资源，包括音效、图片以及打包图片对应的json文件等。先打开一个json文件看看是怎么打包图片的，以block_json.json为例，block_json.json代码如下：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"file"</span>:<span class="string">"block.png"</span>,<span class="attr">"frames"</span>:&#123;</span><br><span class="line"><span class="attr">"block_1"</span>:&#123;<span class="attr">"x"</span>:<span class="number">1</span>,<span class="attr">"y"</span>:<span class="number">1</span>,<span class="attr">"w"</span>:<span class="number">60</span>,<span class="attr">"h"</span>:<span class="number">63</span>,<span class="attr">"offX"</span>:<span class="number">0</span>,<span class="attr">"offY"</span>:<span class="number">0</span>,<span class="attr">"sourceW"</span>:<span class="number">60</span>,<span class="attr">"sourceH"</span>:<span class="number">63</span>&#125;,</span><br><span class="line"><span class="attr">"block_2"</span>:&#123;<span class="attr">"x"</span>:<span class="number">63</span>,<span class="attr">"y"</span>:<span class="number">1</span>,<span class="attr">"w"</span>:<span class="number">60</span>,<span class="attr">"h"</span>:<span class="number">63</span>,<span class="attr">"offX"</span>:<span class="number">0</span>,<span class="attr">"offY"</span>:<span class="number">0</span>,<span class="attr">"sourceW"</span>:<span class="number">60</span>,<span class="attr">"sourceH"</span>:<span class="number">63</span>&#125;,</span><br><span class="line"><span class="attr">"block_3"</span>:&#123;<span class="attr">"x"</span>:<span class="number">125</span>,<span class="attr">"y"</span>:<span class="number">1</span>,<span class="attr">"w"</span>:<span class="number">60</span>,<span class="attr">"h"</span>:<span class="number">63</span>,<span class="attr">"offX"</span>:<span class="number">0</span>,<span class="attr">"offY"</span>:<span class="number">0</span>,<span class="attr">"sourceW"</span>:<span class="number">60</span>,<span class="attr">"sourceH"</span>:<span class="number">63</span>&#125;,</span><br><span class="line"><span class="attr">"block_4"</span>:&#123;<span class="attr">"x"</span>:<span class="number">187</span>,<span class="attr">"y"</span>:<span class="number">1</span>,<span class="attr">"w"</span>:<span class="number">60</span>,<span class="attr">"h"</span>:<span class="number">63</span>,<span class="attr">"offX"</span>:<span class="number">0</span>,<span class="attr">"offY"</span>:<span class="number">0</span>,<span class="attr">"sourceW"</span>:<span class="number">60</span>,<span class="attr">"sourceH"</span>:<span class="number">63</span>&#125;,</span><br><span class="line"><span class="attr">"block_5"</span>:&#123;<span class="attr">"x"</span>:<span class="number">1</span>,<span class="attr">"y"</span>:<span class="number">66</span>,<span class="attr">"w"</span>:<span class="number">60</span>,<span class="attr">"h"</span>:<span class="number">63</span>,<span class="attr">"offX"</span>:<span class="number">0</span>,<span class="attr">"offY"</span>:<span class="number">0</span>,<span class="attr">"sourceW"</span>:<span class="number">60</span>,<span class="attr">"sourceH"</span>:<span class="number">63</span>&#125;,</span><br><span class="line"><span class="attr">"block_6"</span>:&#123;<span class="attr">"x"</span>:<span class="number">63</span>,<span class="attr">"y"</span>:<span class="number">66</span>,<span class="attr">"w"</span>:<span class="number">60</span>,<span class="attr">"h"</span>:<span class="number">63</span>,<span class="attr">"offX"</span>:<span class="number">0</span>,<span class="attr">"offY"</span>:<span class="number">0</span>,<span class="attr">"sourceW"</span>:<span class="number">60</span>,<span class="attr">"sourceH"</span>:<span class="number">63</span>&#125;,</span><br><span class="line"><span class="attr">"block_7"</span>:&#123;<span class="attr">"x"</span>:<span class="number">125</span>,<span class="attr">"y"</span>:<span class="number">66</span>,<span class="attr">"w"</span>:<span class="number">60</span>,<span class="attr">"h"</span>:<span class="number">63</span>,<span class="attr">"offX"</span>:<span class="number">0</span>,<span class="attr">"offY"</span>:<span class="number">0</span>,<span class="attr">"sourceW"</span>:<span class="number">60</span>,<span class="attr">"sourceH"</span>:<span class="number">63</span>&#125;,</span><br><span class="line"><span class="attr">"block_8"</span>:&#123;<span class="attr">"x"</span>:<span class="number">187</span>,<span class="attr">"y"</span>:<span class="number">66</span>,<span class="attr">"w"</span>:<span class="number">60</span>,<span class="attr">"h"</span>:<span class="number">63</span>,<span class="attr">"offX"</span>:<span class="number">0</span>,<span class="attr">"offY"</span>:<span class="number">0</span>,<span class="attr">"sourceW"</span>:<span class="number">60</span>,<span class="attr">"sourceH"</span>:<span class="number">63</span>&#125;,</span><br><span class="line"><span class="attr">"block_9"</span>:&#123;<span class="attr">"x"</span>:<span class="number">1</span>,<span class="attr">"y"</span>:<span class="number">131</span>,<span class="attr">"w"</span>:<span class="number">60</span>,<span class="attr">"h"</span>:<span class="number">63</span>,<span class="attr">"offX"</span>:<span class="number">0</span>,<span class="attr">"offY"</span>:<span class="number">0</span>,<span class="attr">"sourceW"</span>:<span class="number">60</span>,<span class="attr">"sourceH"</span>:<span class="number">63</span>&#125;,</span><br><span class="line"><span class="attr">"block_w"</span>:&#123;<span class="attr">"x"</span>:<span class="number">63</span>,<span class="attr">"y"</span>:<span class="number">131</span>,<span class="attr">"w"</span>:<span class="number">60</span>,<span class="attr">"h"</span>:<span class="number">63</span>,<span class="attr">"offX"</span>:<span class="number">0</span>,<span class="attr">"offY"</span>:<span class="number">0</span>,<span class="attr">"sourceW"</span>:<span class="number">60</span>,<span class="attr">"sourceH"</span>:<span class="number">63</span>&#125;,</span><br><span class="line"><span class="attr">"block_0"</span>:&#123;<span class="attr">"x"</span>:<span class="number">125</span>,<span class="attr">"y"</span>:<span class="number">131</span>,<span class="attr">"w"</span>:<span class="number">60</span>,<span class="attr">"h"</span>:<span class="number">63</span>,<span class="attr">"offX"</span>:<span class="number">0</span>,<span class="attr">"offY"</span>:<span class="number">0</span>,<span class="attr">"sourceW"</span>:<span class="number">60</span>,<span class="attr">"sourceH"</span>:<span class="number">63</span>&#125;&#125;&#125;</span><br></pre></td></tr></table></figure></p>
<p>&#160; &#160; &#160; &#160;是的，正如刚刚所说，block_json.json包含了从block_1开始到block_0结束十张图片的打包数据。这里x和y表示图片中心点在打包的图片block.png中的位置，w和h表示图片的有效宽高，offX和offY表示图像区域中心点与整体区域中心点的偏移量，sourceW和sourceH表示源图片的宽高。</p>
<h2 id="关卡数据文件map-json"><a href="#关卡数据文件map-json" class="headerlink" title="关卡数据文件map.json"></a>关卡数据文件map.json</h2><p>&#160; &#160; &#160; &#160;接下来转到config目录，先看看levelmap.json文件，这个文件包含了十个大关200个关卡的数据，选取一个有代表性的关卡数据如下所示：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;"color":8,"id":20,"beat":6,"map":[[0,0,0,23,0,0,0],[0,0,2,2,0,0],[23,2,1,2,1,2,23],[2,2,1,1,2,2],[0,1,1,1,1,1,0],[2,2,1,1,2,2],[23,2,1,2,1,2,23],[0,0,2,2,0,0],[0,0,0,23,0,0,0]],"mapitem":["1_4_1","5_4_1"],"useritem":[2,2,2,3]&#125;,</span><br></pre></td></tr></table></figure></p>
<p>&#160; &#160; &#160; &#160;上一段json代码描述的是第9大关（从0开始）第20关（从1开始）的关卡数据，其中color表示关卡对应颜色序号，也表示大关卡序号；id表示关卡序号；beat表示本关可用点击次数；之后的map数组表示关卡中每行每列对应的六边形状态。可以看出，关卡总共有9行数据，奇数行有7个数字，偶数行有6个数字，每个数值对应每一个六边形的状态：0表示该六边形不存在，1表示白色，2表示六边形颜色与关卡颜色相同，大于2且小于10的数表示该六边形颜色与主题色相同且包含了数字，值为该数值减2；大于10的数表示该六边形颜色为白色且包含了数字，数字为最后一位减1，这里23对应的数字为2。mapitem数组中每个字符串表示对应位置包含了箭头，例如：”1_4_1”表示第5行（从0开始）第2列（从0开始）有箭头，箭头序号为1；useritem数组中每个数字表示对应位置可用的箭头，这里“2,2,2,3”表示有4个箭头可用（可放置在任意一个六边形上），箭头序号分别为2，2，2，3。需要说明的是，箭头有以下四种类型，序号为0时表示无箭头。<br>序号：1　　　　图片：<img src="../images/Trigger/arrow1.png" alt=""><br>序号：2　　　　图片：<img src="../images/Trigger/arrow2.png" alt=""><br>序号：3　　　　图片：<img src="../images/Trigger/arrow3.png" alt=""><br>序号：4　　　　图片：<img src="../images/Trigger/arrow4.png" alt=""><br>&#160; &#160; &#160; &#160;levelmapss.json这个文件由于还不清楚作用（可能是附加关卡），所以先略过。</p>
<h1 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h1><p>第一篇先写到这，如果有什么还不太明白的地方，可以联系我。</p>
]]></content>
      
        <categories>
            
            <category> Trigger </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Trigger </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[新的开始]]></title>
      <url>/blog/2015/new-beginning.html</url>
      <content type="html"><![CDATA[<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>测试测试测试测试测试测试测试测试测试测试测试测试<a id="more"></a></p>
<p>代码测试：</p>
<pre><code class="bash"><span class="comment">#include &lt;iostream&gt;</span>
using namespace std;　　
int main()　　
{　　
    cout &lt;&lt; <span class="string">"hello world!"</span> &lt;&lt; endl;　　
    <span class="built_in">return</span> 0;　
}
</code></pre>
<p>图片测试：<br><img src="../images/Visual Studio.png" alt="Visual Studio"></p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
    </entry>
    
  
  
</search>
